{"name":"swift-sedent-and-ios","text":"# Swift and Sedent\n\nIn the late 2017 I decided to learn Swift for a number of reasons:\n\n## I needed a very specific exercise app.\nI needed an app tailored for my freelance lifestyle. I don't like gyms in general and don't want to waste time on the commute in particular. Instead, I do some basic warm-up once in a while and a few Yoga asanas. I used clock for this kind of job - every hour I got an alarm and began my exercise for a minute or so and after a minute I got an alarm to stop exercises. I don't enjoy sports much except cycling, so I did as little as possible just to stay healthy. According to [http://www.who.int/dietphysicalactivity/factsheet_adults/en/](World Wide Health Organization), 150 minutes of moderate-intensity activity is enough - it is roughly 20 minutes a day.\n\nAdditionally, I needed a voice guidance, so I can distribute my energy appropriately. It's not an issue for the most exercises, but things like [http://www.fitstream.com/images/bodyweight-training/bodyweight-exercises/full-bridge.jpeg](bridge) could be exhausting even while doing it only for a minute.\n\nI've quickly came up with a switch, a Start button and a few hard-coded exercises. It was enough for me and I could have stopped there.\n\nHowever..\n## I wanted to research the AppStore. There aren't too many stories from independent developers available on the Internet.\nI wanted to know if there is any chance I could be an independent iOS developer. Apple provides a nice platform for this. On the one hand there are lots of stats saying that only [https://sensortower.com/blog/app-store-one-percent](the top 1 percent of those who monetize their apps accounted for 94 percent of the storeâ€™s revenue), but in the other hand there are few fairly successful stories like [https://stories.appbot.co/how-i-got-2-3m-app-downloads-without-spending-a-cent-on-marketing-f4823b6bc779](7 minute exercise) and a huge bunch of useless crap in the AppStore which grows larger every day and makes me wonder why.\n\n## I wanted to learn how to make native apps\nModern web is a great platform for many projects, but it still inferior to native solutions. It is slower, it has limited access to device's APIs and storage. It's even worse on iOS which has no service workers, notifications and offline capabilities. At least, [https://medium.com/@firt/pwas-are-coming-to-ios-11-3-cupertino-we-have-a-problem-2ff49fd7d6ea](for now).\n\n## I wanted to learn Swift.\nI never worked with compiled, statically typed language. I was never interested in C, Objective-C or C++. You might need to know what's the difference between the stack and the heap, how memory allocation works and whatnot. I have to admit I have a very vague representation of all those things and at some point in my life I'm going to dive into it.\n\nBut then again, I just wanted to try compiled, statically typed language without manual memory management mambo jambo. Never really liked Java for it's way too verbose syntax and generally enterprise vibe. I've tried learning Haskell for some time, but eventually dropped it, realizing that I will never find a Haskell job and I don't have enough time to learn it just for fun and self-improvement. So Swift was a natural choice, especially since I use Apple products anyway.\n\nAnd I loved Swift. Protocols, optional types, named parameters, safe navigation, but especially I loved the type system and compile-time checks. There is controversy regarding the need of static types in JS, but I made my mind and eventually be using Flow in JS. Static types might not save time or make the code less buggy, but they save a lot of frustration and provide additional clarity. I would rather spend some time writing types, rather than finding out what exactly function returns or seeking the cause of some silly bug caused by passing an unexpected parameter. And, of course, proper code navigation - go to definition, find symbol and so forth - even powerful IDEs like Webstorm often fail at this.\n\nI was considering to find a job involving Swift, but the whole iOS platform is too large to comprehend in a couple months. We'll see how both web and native platforms will evolve and might switch sides later.\n\n## Summary\nComing back to AppStore research, after release I got a few downloads per week. I didn't bother with build for iOS 10 or 9, with fancy design, translations or any kind of marketing. All of those things would require a lot of time and I don't really have that much.\n\nAnd, let's be honest, the app itself isn't great either. Ugly pictures which I draw myself because didn't want any copyright troubles, disturbing functionality like custom notification messages which no one will ever use, too few default exercises and so on. Despite all of these, Sedent is the only app which allows to create your own exercises and workout plan with voice guidance, and the only app which solves my specific problem. And I have quite a few exiting features to implement someday later, maybe using React Native.\n\nFrom a technical standpoint, I didn't really like the whole Storyboard and layout management. Storyboard is really slow and doesn't always represent what's actually happening on the device. I'd like to try React Native for this purpose. It also seems like async code wasn't working properly for some reason. E.g. `DispatchQueue.main.asyncAfter(deadline: .now() + .seconds(seconds)` was showing the right timing in the console before execution, but events were often firing randomly, so eventually I came with with this ugly solution:\n\n```swift\nDispatchQueue.global(qos: .userInitiated).async {\n                switch secondsLeft {\n                case 30:\n                    if self.currentExercise.thirtySecondsLeftSpoken {\n                        break\n                    } else {\n                        self.speaker(say: self.currentExercise.exercise.speech.thirtySecondsLeft)\n                        self.currentExercise.thirtySecondsLeftSpoken = true\n                    }\n                case 10:\n                    if self.currentExercise.tenSecondsLeftSpoken {\n                    // ...\n```\nAnd even then there are rare times when event won't fire up, regardless of which queue I'm using. It might be my fault or the lack of concurrency model in Swift, still not sure.\n\nOther than that - development process was fairly straightforward. \n\nRegarding the crappy apps, I came to conclusion that developers are simply using SEO-like techniques. Get Flappy Bird code on Github, re-skin it, add some ads and flood the market. Eventually user will stumble upon it and will tap your ad.\n\nAnd here is the list of exercises I use if you're wondering:\n![exercises](exercises.png)\n\nNotification interval is set to 45 minutes.\n\nMarch 6, 2018\nVasily Tokarev\n","title":"Swift and Sedent"}